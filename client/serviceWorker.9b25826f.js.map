{"mappings":"mBACwB,oBAAfA,WACHA,WACgB,oBAATC,KACPA,KACkB,oBAAXC,OACPA,OACkB,oBAAXC,OACPA,OAAAA,4ECPAC,EAAAA,CAAe,IAAK,eAE1BH,KAAKI,iBAAiB,WAAW,SAAUC,GACzCA,EAAMC,UACJC,OAAOC,KALW,aAKWC,MAAK,SAAUC,UAC1CC,QAAQC,IAAI,4BACLF,EAAMG,OAAOV,OAGxBH,KAAKc,iBAGPd,KAAKI,iBAAiB,SAAS,SAAUC,GACvCA,EAAMU,YACJR,OAAOS,MAAMX,EAAMY,SAASR,MAAK,SAAUS,UACrCA,GAGGC,MAAMd,EAAMY","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./public/serviceWorker.js"],"sourcesContent":["var $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$export(e, n, v) {\n  Object.defineProperty(e, n, {get: v, enumerable: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n","let PORTFOLIO_CACHE = 'PORTFOLIO';\nconst urlsToCache = ['/', '/index.html'];\n\nself.addEventListener('install', function (event) {\n  event.waitUntil(\n    caches.open(PORTFOLIO_CACHE).then(function (cache) {\n      console.log('Portfolio cache is open.');\n      return cache.addAll(urlsToCache);\n    })\n  );\n  self.skipWaiting();\n});\n\nself.addEventListener('fetch', function (event) {\n  event.respondWith(\n    caches.match(event.request).then(function (response) {\n      if (response) {\n        return response;\n      }\n      return fetch(event.request);\n    })\n  );\n});\n"],"names":["globalThis","self","window","global","$06f7a3446d30efed8fa4567966fa3a1a$var$urlsToCache","addEventListener","event","waitUntil","caches","open","then","cache","console","log","addAll","skipWaiting","respondWith","match","request","response","fetch"],"version":3,"file":"serviceWorker.9b25826f.js.map"}